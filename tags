!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AF_LOCAL	unp.h	173;"	d
Accept	unp.h	/^int		 Accept(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
BUFFSIZE	unp.h	197;"	d
Bind	unp.h	/^void	 Bind(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-g -Wall$/;"	m
CMSG_LEN	unp.h	154;"	d
CMSG_SPACE	unp.h	158;"	d
CPU_VENDOR_OS	config.h	5;"	d
Calloc	unp.h	/^void	*Calloc(size_t, size_t);$/;"	p	signature:(size_t, size_t)
Close	unp.h	/^void	 Close(int);$/;"	p	signature:(int)
Connect	unp.h	/^void	 Connect(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Connect_timeo	unp.h	/^void	 Connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
DIR_MODE	unp.h	240;"	d
Dup2	unp.h	/^void	 Dup2(int, int);$/;"	p	signature:(int, int)
FILE_MODE	unp.h	238;"	d
Family_to_level	unp.h	/^int		 Family_to_level(int);$/;"	p	signature:(int)
Fclose	unp.h	/^void	 Fclose(FILE *);$/;"	p	signature:(FILE *)
Fcntl	unp.h	/^int		 Fcntl(int, int, int);$/;"	p	signature:(int, int, int)
Fdopen	unp.h	/^FILE	*Fdopen(int, const char *);$/;"	p	signature:(int, const char *)
Fgets	unp.h	/^char	*Fgets(char *, int, FILE *);$/;"	p	signature:(char *, int, FILE *)
Fopen	unp.h	/^FILE	*Fopen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Fork	unp.h	/^pid_t	 Fork(void);$/;"	p	signature:(void)
Fputs	unp.h	/^void	 Fputs(const char *, FILE *);$/;"	p	signature:(const char *, FILE *)
Getpeername	unp.h	/^void	 Getpeername(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getsockname	unp.h	/^void	 Getsockname(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getsockopt	unp.h	/^void	 Getsockopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
Gettimeofday	unp.h	/^void	 Gettimeofday(struct timeval *, void *);$/;"	p	signature:(struct timeval *, void *)
HAVE_ADDRINFO_STRUCT	config.h	8;"	d
HAVE_ARPA_INET_H	config.h	11;"	d
HAVE_BZERO	config.h	14;"	d
HAVE_ERRNO_H	config.h	26;"	d
HAVE_FCNTL_H	config.h	29;"	d
HAVE_GETADDRINFO	config.h	32;"	d
HAVE_GETADDRINFO_PROTO	config.h	35;"	d
HAVE_GETHOSTBYNAME2	config.h	38;"	d
HAVE_GETHOSTBYNAME_R	config.h	41;"	d
HAVE_GETHOSTNAME	config.h	44;"	d
HAVE_GETHOSTNAME_PROTO	config.h	47;"	d
HAVE_GETNAMEINFO	config.h	50;"	d
HAVE_GETNAMEINFO_PROTO	config.h	53;"	d
HAVE_GETRUSAGE_PROTO	config.h	56;"	d
HAVE_HSTRERROR	config.h	59;"	d
HAVE_HSTRERROR_PROTO	config.h	62;"	d
HAVE_IF_NAMEINDEX_STRUCT	config.h	65;"	d
HAVE_IF_NAMETOINDEX	config.h	68;"	d
HAVE_IF_NAMETOINDEX_PROTO	config.h	71;"	d
HAVE_INET6_RTH_INIT	config.h	74;"	d
HAVE_INET_ATON	config.h	77;"	d
HAVE_INET_ATON_PROTO	config.h	80;"	d
HAVE_INET_PTON	config.h	83;"	d
HAVE_INET_PTON_PROTO	config.h	86;"	d
HAVE_LIBPTHREAD	config.h	98;"	d
HAVE_MKSTEMP	config.h	110;"	d
HAVE_MSGHDR_MSG_CONTROL	config.h	113;"	d
HAVE_NETDB_H	config.h	119;"	d
HAVE_NETINET_IN_H	config.h	125;"	d
HAVE_POLL	config.h	131;"	d
HAVE_POLL_H	config.h	134;"	d
HAVE_PSELECT	config.h	137;"	d
HAVE_PSELECT_PROTO	config.h	140;"	d
HAVE_PTHREAD_H	config.h	143;"	d
HAVE_SIGNAL_H	config.h	146;"	d
HAVE_SNPRINTF	config.h	149;"	d
HAVE_SNPRINTF_PROTO	config.h	152;"	d
HAVE_SOCKATMARK	config.h	161;"	d
HAVE_SOCKATMARK_PROTO	config.h	164;"	d
HAVE_STDIO_H	config.h	167;"	d
HAVE_STDLIB_H	config.h	170;"	d
HAVE_STRINGS_H	config.h	173;"	d
HAVE_STRING_H	config.h	176;"	d
HAVE_STROPTS_H	config.h	179;"	d
HAVE_STRUCT_IFREQ_IFR_MTU	config.h	182;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	config.h	185;"	d
HAVE_SYS_IOCTL_H	config.h	194;"	d
HAVE_SYS_PARAM_H	config.h	197;"	d
HAVE_SYS_SELECT_H	config.h	200;"	d
HAVE_SYS_SOCKET_H	config.h	203;"	d
HAVE_SYS_STAT_H	config.h	209;"	d
HAVE_SYS_SYSCTL_H	config.h	212;"	d
HAVE_SYS_TIME_H	config.h	215;"	d
HAVE_SYS_TYPES_H	config.h	218;"	d
HAVE_SYS_UIO_H	config.h	221;"	d
HAVE_SYS_UN_H	config.h	224;"	d
HAVE_SYS_WAIT_H	config.h	227;"	d
HAVE_TIMESPEC_STRUCT	config.h	230;"	d
HAVE_TIME_H	config.h	233;"	d
HAVE_UNISTD_H	config.h	236;"	d
HAVE_VSNPRINTF	config.h	239;"	d
Host_serv	unp.h	/^struct addrinfo *Host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
INADDR_NONE	unp.h	98;"	d
INET6_ADDRSTRLEN	unp.h	121;"	d
INET_ADDRSTRLEN	unp.h	113;"	d
INFTIM	unp.h	184;"	d
INFTIM_UNPH	unp.h	187;"	d
IPV4	config.h	248;"	d
IPV6	config.h	251;"	d
IPv4	config.h	254;"	d
IPv6	config.h	257;"	d
If_indextoname	unp.h	/^char			*If_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
If_nameindex	unp.h	/^struct if_nameindex	*If_nameindex(void);$/;"	p	signature:(void)
If_nametoindex	unp.h	/^unsigned int		 If_nametoindex(const char *);$/;"	p	signature:(const char *)
Inet6_rth_add	unp.h	/^void	 Inet6_rth_add(void *, const struct in6_addr *);$/;"	p	signature:(void *, const struct in6_addr *)
Inet6_rth_getaddr	unp.h	/^struct in6_addr *Inet6_rth_getaddr(const void *, int);$/;"	p	signature:(const void *, int)
Inet6_rth_init	unp.h	/^void	*Inet6_rth_init(void *, socklen_t, int, int);$/;"	p	signature:(void *, socklen_t, int, int)
Inet6_rth_reverse	unp.h	/^void	 Inet6_rth_reverse(const void *, void *);$/;"	p	signature:(const void *, void *)
Inet6_rth_segments	unp.h	/^int		 Inet6_rth_segments(const void *);$/;"	p	signature:(const void *)
Inet6_rth_space	unp.h	/^int		 Inet6_rth_space(int, int);$/;"	p	signature:(int, int)
Inet_ntop	unp.h	/^const char		*Inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
Inet_pton	unp.h	/^void			 Inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
Ioctl	unp.h	/^int		 Ioctl(int, int, void *);$/;"	p	signature:(int, int, void *)
Kevent	unp.h	/^int		 Kevent(int, const struct kevent *, int,$/;"	p	signature:(int, const struct kevent *, int, struct kevent *, int, const struct timespec *)
Kqueue	unp.h	/^int		 Kqueue(void);$/;"	p	signature:(void)
LDFLAGS	Makefile	/^LDFLAGS=$/;"	m
LIBS	Makefile	/^LIBS=.\/libunp.a -lpthread$/;"	m
LIB_OBJS	Makefile	/^LIB_OBJS=error.o$/;"	m
LISTENQ	unp.h	193;"	d
Listen	unp.h	/^void	 Listen(int, int);$/;"	p	signature:(int, int)
MAXLINE	unp.h	196;"	d
MCAST	config.h	260;"	d
Malloc	unp.h	/^void	*Malloc(size_t);$/;"	p	signature:(size_t)
Mcast_block_source	unp.h	/^void	 Mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_get_if	unp.h	/^int		 Mcast_get_if(int);$/;"	p	signature:(int)
Mcast_get_loop	unp.h	/^int		 Mcast_get_loop(int);$/;"	p	signature:(int)
Mcast_get_ttl	unp.h	/^int		 Mcast_get_ttl(int);$/;"	p	signature:(int)
Mcast_join	unp.h	/^void	 Mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
Mcast_join_source_group	unp.h	/^void	 Mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
Mcast_leave	unp.h	/^void	 Mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Mcast_leave_source_group	unp.h	/^void	 Mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_set_if	unp.h	/^void	 Mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
Mcast_set_loop	unp.h	/^void	 Mcast_set_loop(int, int);$/;"	p	signature:(int, int)
Mcast_set_ttl	unp.h	/^void	 Mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
Mcast_unblock_source	unp.h	/^void	 Mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mkstemp	unp.h	/^int	 Mkstemp(char *);$/;"	p	signature:(char *)
Mmap	unp.h	/^void	*Mmap(void *, size_t, int, int, int, off_t);$/;"	p	signature:(void *, size_t, int, int, int, off_t)
My_addrs	unp.h	/^char   **My_addrs(int *);$/;"	p	signature:(int *)
OBJS	Makefile	/^OBJS= $(LIB_OBJS) daytimetcpcli.o$/;"	m
Open	unp.h	/^int		 Open(const char *, int, mode_t);$/;"	p	signature:(const char *, int, mode_t)
PACKAGE_BUGREPORT	config.h	263;"	d
PACKAGE_NAME	config.h	266;"	d
PACKAGE_STRING	config.h	269;"	d
PACKAGE_TARNAME	config.h	272;"	d
PACKAGE_VERSION	config.h	275;"	d
PF_LOCAL	unp.h	176;"	d
PROGS	Makefile	/^PROGS=daytimetcpcli daytimetcpsrv$/;"	m
Pipe	unp.h	/^void	 Pipe(int *fds);$/;"	p	signature:(int *fds)
Poll	unp.h	/^int		 Poll(struct pollfd *, unsigned long, int);$/;"	p	signature:(struct pollfd *, unsigned long, int)
Read	unp.h	/^ssize_t	 Read(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Read_fd	unp.h	/^ssize_t	 Read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
Readable_timeo	unp.h	/^int		 Readable_timeo(int, int);$/;"	p	signature:(int, int)
Readline	unp.h	/^ssize_t	 Readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Readn	unp.h	/^ssize_t	 Readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Recv	unp.h	/^ssize_t	 Recv(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Recvfrom	unp.h	/^ssize_t	 Recvfrom(int, void *, size_t, int, SA *, socklen_t *);$/;"	p	signature:(int, void *, size_t, int, SA *, socklen_t *)
Recvfrom_flags	unp.h	/^ssize_t	 Recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct unp_in_pktinfo *)
Recvmsg	unp.h	/^ssize_t	 Recvmsg(int, struct msghdr *, int);$/;"	p	signature:(int, struct msghdr *, int)
SA	unp.h	212;"	d
SERV_PORT	unp.h	200;"	d
SERV_PORT_STR	unp.h	201;"	d
SHUT_RD	unp.h	102;"	d
SHUT_RDWR	unp.h	104;"	d
SHUT_WR	unp.h	103;"	d
STDC_HEADERS	config.h	281;"	d
SUN_LEN	unp.h	166;"	d
Select	unp.h	/^int		 Select(int, fd_set *, fd_set *, fd_set *, struct timeval *);$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, struct timeval *)
Send	unp.h	/^void	 Send(int, const void *, size_t, int);$/;"	p	signature:(int, const void *, size_t, int)
Sendmsg	unp.h	/^void	 Sendmsg(int, const struct msghdr *, int);$/;"	p	signature:(int, const struct msghdr *, int)
Sendto	unp.h	/^void	 Sendto(int, const void *, size_t, int, const SA *, socklen_t);$/;"	p	signature:(int, const void *, size_t, int, const SA *, socklen_t)
Setsockopt	unp.h	/^void	 Setsockopt(int, int, int, const void *, socklen_t);$/;"	p	signature:(int, int, int, const void *, socklen_t)
Shutdown	unp.h	/^void	 Shutdown(int, int);$/;"	p	signature:(int, int)
Sigaddset	unp.h	/^void	 Sigaddset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigdelset	unp.h	/^void	 Sigdelset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigemptyset	unp.h	/^void	 Sigemptyset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigfillset	unp.h	/^void	 Sigfillset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigfunc	unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigismember	unp.h	/^int		 Sigismember(const sigset_t *, int);$/;"	p	signature:(const sigset_t *, int)
Signal	unp.h	/^Sigfunc *Signal(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Signal_intr	unp.h	/^Sigfunc *Signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Sigpending	unp.h	/^void	 Sigpending(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigprocmask	unp.h	/^void	 Sigprocmask(int, const sigset_t *, sigset_t *);$/;"	p	signature:(int, const sigset_t *, sigset_t *)
Sock_bind_wild	unp.h	/^int		 Sock_bind_wild(int, int);$/;"	p	signature:(int, int)
Sock_ntop	unp.h	/^char	*Sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sock_ntop_host	unp.h	/^char	*Sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sockatmark	unp.h	/^int		 Sockatmark(int);$/;"	p	signature:(int)
Socket	unp.h	/^int		 Socket(int, int, int);$/;"	p	signature:(int, int, int)
Socketpair	unp.h	/^void	 Socketpair(int, int, int, int *);$/;"	p	signature:(int, int, int, int *)
Sockfd_to_family	unp.h	/^int		 Sockfd_to_family(int);$/;"	p	signature:(int)
Strdup	unp.h	/^char	*Strdup(const char *);$/;"	p	signature:(const char *)
Sysconf	unp.h	/^long	 Sysconf(int);$/;"	p	signature:(int)
Sysctl	unp.h	/^void	 Sysctl(int *, u_int, void *, size_t *, void *, size_t);$/;"	p	signature:(int *, u_int, void *, size_t *, void *, size_t)
TIME_WITH_SYS_TIME	config.h	284;"	d
Tcp_connect	unp.h	/^int		 Tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Tcp_listen	unp.h	/^int		 Tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
UNIXDG_PATH	unp.h	203;"	d
UNIXDOMAIN	config.h	287;"	d
UNIXSTR_PATH	unp.h	202;"	d
UNIXdomain	config.h	290;"	d
Udp_client	unp.h	/^int		 Udp_client(const char *, const char *, SA **, socklen_t *);$/;"	p	signature:(const char *, const char *, SA **, socklen_t *)
Udp_connect	unp.h	/^int		 Udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Udp_server	unp.h	/^int		 Udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Unlink	unp.h	/^void	 Unlink(const char *);$/;"	p	signature:(const char *)
Wait	unp.h	/^pid_t	 Wait(int *);$/;"	p	signature:(int *)
Waitpid	unp.h	/^pid_t	 Waitpid(pid_t, int *, int);$/;"	p	signature:(pid_t, int *, int)
Writable_timeo	unp.h	/^int		 Writable_timeo(int, int);$/;"	p	signature:(int, int)
Write	unp.h	/^void	 Write(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Write_fd	unp.h	/^ssize_t	 Write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Writen	unp.h	/^void	 Writen(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
__SS_ALIGNSIZE	unp.h	219;"	d
__SS_MAXSIZE	unp.h	218;"	d
__SS_PAD1SIZE	unp.h	221;"	d
__SS_PAD1SIZE	unp.h	223;"	d
__SS_PAD2SIZE	unp.h	225;"	d
__ss_align	unp.h	/^	int64_t		__ss_align;$/;"	m	struct:sockaddr_storage	access:public
__ss_pad1	unp.h	/^	char		__ss_pad1[__SS_PAD1SIZE];$/;"	m	struct:sockaddr_storage	access:public
__ss_pad2	unp.h	/^	char		__ss_pad2[__SS_PAD2SIZE];$/;"	m	struct:sockaddr_storage	access:public
__unp_h	unp.h	5;"	d
bzero	unp.h	130;"	d
connect_nonb	unp.h	/^int		 connect_nonb(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connect_timeo	unp.h	/^int		 connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
daemon_inetd	unp.h	/^void	 daemon_inetd(const char *, int);$/;"	p	signature:(const char *, int)
daemon_init	unp.h	/^int	 daemon_init(const char *, int);$/;"	p	signature:(const char *, int)
daemon_proc	error.c	/^int		daemon_proc;		\/* set nonzero by daemon_init() *\/$/;"	v
dg_cli	unp.h	/^void	 dg_cli(FILE *, int, const SA *, socklen_t);$/;"	p	signature:(FILE *, int, const SA *, socklen_t)
dg_echo	unp.h	/^void	 dg_echo(int, SA *, socklen_t);$/;"	p	signature:(int, SA *, socklen_t)
err_doit	error.c	/^err_doit(int errnoflag, int level, const char *fmt, va_list ap)$/;"	f	file:	signature:(int errnoflag, int level, const char *fmt, va_list ap)
err_doit	error.c	/^static void	err_doit(int, int, const char *, va_list);$/;"	p	file:	signature:(int, int, const char *, va_list)
err_dump	error.c	/^err_dump(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_dump	unp.h	/^void	 err_dump(const char *, ...);$/;"	p	signature:(const char *, ...)
err_msg	error.c	/^err_msg(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_msg	unp.h	/^void	 err_msg(const char *, ...);$/;"	p	signature:(const char *, ...)
err_quit	error.c	/^err_quit(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_quit	unp.h	/^void	 err_quit(const char *, ...);$/;"	p	signature:(const char *, ...)
err_ret	error.c	/^err_ret(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_ret	unp.h	/^void	 err_ret(const char *, ...);$/;"	p	signature:(const char *, ...)
err_sys	error.c	/^err_sys(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_sys	unp.h	/^void	 err_sys(const char *, ...);$/;"	p	signature:(const char *, ...)
family_to_level	unp.h	/^int		 family_to_level(int);$/;"	p	signature:(int)
freeaddrinfo	unp.h	/^void	 freeaddrinfo(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
gai_strerror	unp.h	/^char	*gai_strerror(int);$/;"	p	signature:(int)
getaddrinfo	unp.h	/^int		 getaddrinfo(const char *, const char *, const struct addrinfo *,$/;"	p	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
gethostbyname2	unp.h	137;"	d
gethostname	unp.h	/^int		 gethostname(char *, int);$/;"	p	signature:(char *, int)
getnameinfo	unp.h	/^int		 getnameinfo(const SA *, socklen_t, char *, size_t, char *, size_t, int);$/;"	p	signature:(const SA *, socklen_t, char *, size_t, char *, size_t, int)
gf_time	unp.h	/^char	*gf_time(void);$/;"	p	signature:(void)
heartbeat_cli	unp.h	/^void	 heartbeat_cli(int, int, int);$/;"	p	signature:(int, int, int)
heartbeat_serv	unp.h	/^void	 heartbeat_serv(int, int, int);$/;"	p	signature:(int, int, int)
host_serv	unp.h	/^struct addrinfo *host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
hstrerror	unp.h	/^const char	*hstrerror(int);$/;"	p	signature:(int)
if_freenameindex	unp.h	/^void			 if_freenameindex(struct if_nameindex *);$/;"	p	signature:(struct if_nameindex *)
if_index	unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_indextoname	unp.h	/^char			*if_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
if_name	unp.h	/^  char          *if_name;   \/* null-terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex	unp.h	/^struct if_nameindex *if_nameindex(void);$/;"	p	signature:(void)
if_nameindex	unp.h	/^struct if_nameindex {$/;"	s
if_nameindex::if_index	unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_name	unp.h	/^  char          *if_name;   \/* null-terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_nametoindex	unp.h	/^unsigned int	 if_nametoindex(const char *);$/;"	p	signature:(const char *)
in_cksum	unp.h	/^uint16_t	in_cksum(uint16_t *, int);$/;"	p	signature:(uint16_t *, int)
inet6_srcrt_print	unp.h	/^void	 inet6_srcrt_print(void *);$/;"	p	signature:(void *)
inet_aton	unp.h	/^int		 inet_aton(const char *, struct in_addr *);$/;"	p	signature:(const char *, struct in_addr *)
inet_ntop	unp.h	/^const char	*inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
inet_pton	unp.h	/^int			 inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
inet_srcrt_add	unp.h	/^int		 inet_srcrt_add(char *);$/;"	p	signature:(char *)
inet_srcrt_init	unp.h	/^u_char  *inet_srcrt_init(int);$/;"	p	signature:(int)
inet_srcrt_print	unp.h	/^void	 inet_srcrt_print(u_char *, int);$/;"	p	signature:(u_char *, int)
ipi_addr	unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:unp_in_pktinfo	typeref:struct:unp_in_pktinfo::in_addr	access:public
ipi_ifindex	unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:unp_in_pktinfo	access:public
main	daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	daytimetcpsrv.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
max	unp.h	246;"	d
mcast_block_source	unp.h	/^int		 mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_get_if	unp.h	/^int		 mcast_get_if(int);$/;"	p	signature:(int)
mcast_get_loop	unp.h	/^int		 mcast_get_loop(int);$/;"	p	signature:(int)
mcast_get_ttl	unp.h	/^int		 mcast_get_ttl(int);$/;"	p	signature:(int)
mcast_join	unp.h	/^int		 mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
mcast_join_source_group	unp.h	/^int		 mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
mcast_leave	unp.h	/^int		 mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
mcast_leave_source_group	unp.h	/^int		 mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_set_if	unp.h	/^int		 mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
mcast_set_loop	unp.h	/^int		 mcast_set_loop(int, int);$/;"	p	signature:(int, int)
mcast_set_ttl	unp.h	/^int		 mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
mcast_unblock_source	unp.h	/^int		 mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
min	unp.h	245;"	d
my_addrs	unp.h	/^char   **my_addrs(int *);$/;"	p	signature:(int *)
pselect	unp.h	/^int		 pselect(int, fd_set *, fd_set *, fd_set *,$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const sigset_t *)
read_fd	unp.h	/^ssize_t	 read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
readable_timeo	unp.h	/^int		 readable_timeo(int, int);$/;"	p	signature:(int, int)
readline	unp.h	/^ssize_t	 readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readn	unp.h	/^ssize_t	 readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
recv	unp.h	90;"	d
recv	unp.h	92;"	d
recvfrom_flags	unp.h	/^ssize_t	 recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct unp_in_pktinfo *)
send	unp.h	91;"	d
send	unp.h	93;"	d
signal_intr	unp.h	/^Sigfunc *signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
snprintf	unp.h	/^int		 snprintf(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
sock_bind_wild	unp.h	/^int		 sock_bind_wild(int, int);$/;"	p	signature:(int, int)
sock_cmp_addr	unp.h	/^int		 sock_cmp_addr(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_cmp_port	unp.h	/^int		 sock_cmp_port(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_get_port	unp.h	/^int		 sock_get_port(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop	unp.h	/^char	*sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop_host	unp.h	/^char	*sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_set_addr	unp.h	/^void	 sock_set_addr(SA *, socklen_t, const void *);$/;"	p	signature:(SA *, socklen_t, const void *)
sock_set_port	unp.h	/^void	 sock_set_port(SA *, socklen_t, int);$/;"	p	signature:(SA *, socklen_t, int)
sock_set_wild	unp.h	/^void	 sock_set_wild(SA *, socklen_t);$/;"	p	signature:(SA *, socklen_t)
sockaddr_storage	unp.h	/^struct sockaddr_storage {$/;"	s
sockaddr_storage::__ss_align	unp.h	/^	int64_t		__ss_align;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad1	unp.h	/^	char		__ss_pad1[__SS_PAD1SIZE];$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad2	unp.h	/^	char		__ss_pad2[__SS_PAD2SIZE];$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_family	unp.h	/^	sa_family_t	ss_family;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_len	unp.h	/^	u_char		ss_len;$/;"	m	struct:sockaddr_storage	access:public
sockatmark	unp.h	/^int		 sockatmark(int);$/;"	p	signature:(int)
sockfd_to_family	unp.h	/^int		 sockfd_to_family(int);$/;"	p	signature:(int)
ss_family	unp.h	/^	sa_family_t	ss_family;$/;"	m	struct:sockaddr_storage	access:public
ss_len	unp.h	/^	u_char		ss_len;$/;"	m	struct:sockaddr_storage	access:public
str_cli	unp.h	/^void	 str_cli(FILE *, int);$/;"	p	signature:(FILE *, int)
str_echo	unp.h	/^void	 str_echo(int);$/;"	p	signature:(int)
t_scalar_t	config.h	314;"	d
tcp_connect	unp.h	/^int		 tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
tcp_listen	unp.h	/^int		 tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
timespec	unp.h	/^struct timespec {$/;"	s
timespec::tv_nsec	unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_sec	unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
tv_nsec	unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
tv_sec	unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
tv_sub	unp.h	/^void	 tv_sub(struct timeval *, struct timeval *);$/;"	p	signature:(struct timeval *, struct timeval *)
udp_client	unp.h	/^int		 udp_client(const char *, const char *, SA **, socklen_t *);$/;"	p	signature:(const char *, const char *, SA **, socklen_t *)
udp_connect	unp.h	/^int		 udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
udp_server	unp.h	/^int		 udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
unp_in_pktinfo	unp.h	/^struct unp_in_pktinfo {$/;"	s
unp_in_pktinfo::ipi_addr	unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:unp_in_pktinfo	typeref:struct:unp_in_pktinfo::in_addr	access:public
unp_in_pktinfo::ipi_ifindex	unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:unp_in_pktinfo	access:public
writable_timeo	unp.h	/^int		 writable_timeo(int, int);$/;"	p	signature:(int, int)
write_fd	unp.h	/^ssize_t	 write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
writen	unp.h	/^ssize_t	 writen(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
